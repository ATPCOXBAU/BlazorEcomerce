@inject IProductService ProductService;


@if (ProductService.Products == null )
{
    <span>Loading...........</span>
}
else if  (ProductService.Products.Count == 0)
{
    <span>Sorry, We didn't find products available.</span>

}
else
{


    <div class="listContainer">

        @foreach (var item in ProductService.Products)
        {

            <div class="card  p-3 bg-white m-3 w-350">
                 <div class=image-container>
                    <img src="@item.ImageUrl" alt="@item.Title">
                 </div>
                 <div class="text">
                    <h4 class="word-wrap" >@item.Title</h4>
                 </div>
                <button class="button-9" onclick="@(() => NavigateToProduct(item.Id))">
                    View Product
                </button>

            </div>


        }
    </div>
}

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }


    protected override async Task OnInitializedAsync()
    {
        if (ProductService.Products.Count == 0)
        {
            Console.WriteLine("Vacio");
            await ProductService.GetProducts();
        }
   

    }

    private void NavigateToProduct(int productId)
    {
        NavigationManager.NavigateTo($"/product/{productId}");
    }
}
